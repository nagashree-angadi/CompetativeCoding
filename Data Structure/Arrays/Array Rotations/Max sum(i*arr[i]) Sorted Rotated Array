PROBLEM
Find maximum value of Sum( i*arr[i]) with only rotations on given array allowed.

Given an array, only rotation operation is allowed on array. 
We can rotate the array as many times as we want. 
Return the maximum possbile of summation of i*arr[i].

INPUT
arr[] = {1, 2, 3, 4}

OUTPUT
= 1*0+2*1+3*2+4*3 
= 0+2+6+12 
= 20

SOLUTION
- Find the minimum, then find the sum from there

    int minValueInArray( int[] arr){

        if (arr == null || arr.length == 0) 
            return 0;
        if (arr.length == 1) 
            return arr[0];
        
        int start = 0;
        int end = arr.length -1;

        while( start < end){
            int mid = start + (end-start)/2;
            
            if( mid > 0 && arr[mid] < arr[mid-1] )
                return mid;
            
            if( arr[start] <= arr[mid] && arr[mid] > arr[end])
                start = mid+1;
            else
                end = mid-1;
        }
        return start;
    }

    int maxSum( int[] arr){
        int index = minValueInArray(arr);

        int sum = 0;
        for(int i=0; i< arr.length; i++){
            int newIndex = (index+i)%arr.length;
            sum+= i*arr[newIndex];
        }
        return sum;
    }